{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Adls_rawfile_customer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				},
				{
					"dataset": {
						"referenceName": "Adls_lineitem",
						"type": "DatasetReference"
					},
					"name": "Lineitem"
				},
				{
					"dataset": {
						"referenceName": "Adls_nation",
						"type": "DatasetReference"
					},
					"name": "Nation"
				},
				{
					"dataset": {
						"referenceName": "Adls_orders",
						"type": "DatasetReference"
					},
					"name": "Orders"
				},
				{
					"dataset": {
						"referenceName": "Adls_part",
						"type": "DatasetReference"
					},
					"name": "Part"
				},
				{
					"dataset": {
						"referenceName": "Adls_partsupp",
						"type": "DatasetReference"
					},
					"name": "Partsupp"
				},
				{
					"dataset": {
						"referenceName": "Adls_region",
						"type": "DatasetReference"
					},
					"name": "Region"
				},
				{
					"dataset": {
						"referenceName": "Adls_supplier",
						"type": "DatasetReference"
					},
					"name": "Supplier"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "derivedColumn3"
				},
				{
					"name": "derivedColumn4"
				},
				{
					"name": "derivedColumn5"
				},
				{
					"name": "derivedColumn6"
				},
				{
					"name": "derivedColumn7"
				},
				{
					"name": "derivedColumn8"
				},
				{
					"name": "returnflagQ6"
				}
			],
			"scriptLines": [
				"source(output(",
				"          C_CUSTKEY as string,",
				"          C_NAME as string,",
				"          C_ADDRESS as string,",
				"          C_NATIONKEY as string,",
				"          C_PHONE as string,",
				"          C_ACCTBAL as string,",
				"          C_MKTSEGMENT as string,",
				"          C_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customer",
				"source(output(",
				"          L_ORDERKEY as string,",
				"          L_PARTKEY as string,",
				"          L_SUPPKEY as string,",
				"          L_LINENUMBER as string,",
				"          L_QUANTITY as string,",
				"          L_EXTENDEDPRICE as string,",
				"          L_DISCOUNT as string,",
				"          L_TAX as string,",
				"          L_RETURNFLAG as string,",
				"          L_LINESTATUS as string,",
				"          L_SHIPDATE as string,",
				"          L_COMMITDATE as string,",
				"          L_RECEIPTDATE as string,",
				"          L_SHIPINSTRUCT as string,",
				"          L_SHIPMODE as string,",
				"          L_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Lineitem",
				"source(output(",
				"          N_NATIONKEY as string,",
				"          N_NAME as string,",
				"          N_REGIONKEY as string,",
				"          N_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Nation",
				"source(output(",
				"          O_ORDERKEY as string,",
				"          O_CUSTKEY as string,",
				"          O_ORDERSTATUS as string,",
				"          O_TOTALPRICE as string,",
				"          O_ORDERDATE as string,",
				"          O_ORDERPRIORITY as string,",
				"          O_CLERK as string,",
				"          O_SHIPPRIORITY as string,",
				"          O_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Orders",
				"source(output(",
				"          P_PARTKEY as string,",
				"          P_NAME as string,",
				"          P_MFGR as string,",
				"          P_BRAND as string,",
				"          P_TYPE as string,",
				"          P_SIZE as string,",
				"          P_CONTAINER as string,",
				"          P_RETAILPRICE as string,",
				"          P_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Part",
				"source(output(",
				"          PS_PARTKEY as string,",
				"          PS_SUPPKEY as string,",
				"          PS_AVAILQTY as string,",
				"          PS_SUPPLYCOST as string,",
				"          PS_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Partsupp",
				"source(output(",
				"          R_REGIONKEY as string,",
				"          R_NAME as string,",
				"          R_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Region",
				"source(output(",
				"          S_SUPPKEY as string,",
				"          S_NAME as string,",
				"          S_ADDRESS as string,",
				"          S_NATIONKEY as string,",
				"          S_PHONE as string,",
				"          S_ACCTBAL as string,",
				"          S_COMMENT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Supplier",
				"Customer derive(C_CUSTKEY = toInteger(C_CUSTKEY),",
				"          C_NATIONKEY = toInteger(C_NATIONKEY),",
				"          C_ACCTBAL = toInteger(C_ACCTBAL)) ~> derivedColumn1",
				"Lineitem derive(L_ORDERKEY = toInteger(L_ORDERKEY),",
				"          L_PARTKEY = toInteger(L_PARTKEY),",
				"          L_SUPPKEY = toInteger(L_SUPPKEY),",
				"          L_LINENUMBER = toInteger(L_LINENUMBER),",
				"          L_QUANTITY = toInteger(L_QUANTITY),",
				"          L_EXTENDEDPRICE = toFloat(L_EXTENDEDPRICE),",
				"          L_DISCOUNT = toFloat(L_DISCOUNT),",
				"          L_TAX = toFloat(L_TAX),",
				"          L_SHIPDATE = toDate(L_SHIPDATE, 'mm/dd/yyyy'),",
				"          L_COMMITDATE = toDate(L_COMMITDATE, 'mm/dd/yyyy'),",
				"          L_RECEIPTDATE = toDate(L_RECEIPTDATE, 'mm/dd/yyyy')) ~> derivedColumn2",
				"Nation derive(N_NATIONKEY = toInteger(N_NATIONKEY)) ~> derivedColumn3",
				"Orders derive(O_ORDERKEY = toInteger(O_ORDERKEY),",
				"          O_CUSTKEY = toInteger(O_CUSTKEY),",
				"          O_TOTALPRICE = toFloat(O_TOTALPRICE),",
				"          O_ORDERDATE = toDate(O_ORDERDATE, 'mm/dd/yyyy'),",
				"          O_SHIPPRIORITY = toInteger(O_SHIPPRIORITY)) ~> derivedColumn4",
				"Part derive(P_PARTKEY = toInteger(P_PARTKEY),",
				"          P_SIZE = toInteger(P_SIZE),",
				"          P_RETAILPRICE = toFloat(P_RETAILPRICE)) ~> derivedColumn5",
				"Partsupp derive(PS_PARTKEY = toInteger(PS_PARTKEY),",
				"          PS_SUPPKEY = toInteger(PS_SUPPKEY),",
				"          PS_AVAILQTY = toInteger(PS_AVAILQTY),",
				"          PS_SUPPLYCOST = toFloat(PS_SUPPLYCOST)) ~> derivedColumn6",
				"Region derive(R_REGIONKEY = toInteger(R_REGIONKEY)) ~> derivedColumn7",
				"Supplier derive(S_SUPPKEY = toInteger(S_SUPPKEY),",
				"          S_NATIONKEY = toInteger(S_NATIONKEY),",
				"          S_ACCTBAL = toFloat(S_ACCTBAL)) ~> derivedColumn8",
				"derivedColumn2 aggregate(groupBy(L_RETURNFLAG),",
				"     { extended price} = sum(L_EXTENDEDPRICE),",
				"          { discounted  extended price} = sum(L_EXTENDEDPRICE*(1-L_DISCOUNT)),",
				"          {discounted extended price plus tax} = sum(L_EXTENDEDPRICE*(1-L_DISCOUNT)*(1+L_TAX)),",
				"          {average quantity} = avg(L_QUANTITY),",
				"          { average extended price} = avg(L_EXTENDEDPRICE),",
				"          { average  discount} = avg(L_DISCOUNT),",
				"          {count of line items} = count(L_RETURNFLAG)) ~> returnflagQ6"
			]
		}
	}
}